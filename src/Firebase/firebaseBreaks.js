import { db } from "./firebaseConfig.js";
import {
  addDoc,
  collection,
  deleteDoc,
  doc,
  getDocs,
} from "firebase/firestore";
import toast from "react-hot-toast";

// üî• –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–µ—Ä–µ—Ä—ã–≤–æ–≤
export const getBreaks = async () => {
  try {
    const querySnapshot = await getDocs(collection(db, "breaks"));
    return querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));
  } catch {
    return [];
  }
};

// üî• –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ—Ä—ã–≤–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
export const addBreak = async (breakTime) => {
  try {
    const docRef = await addDoc(collection(db, "breaks"), breakTime);
    toast.success;
    return { id: docRef.id, ...breakTime };
  } catch (error) {
    toast.Error;
    throw new Error(error.message);
  }
};

// üî• –£–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä–µ—Ä—ã–≤–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
export const deleteBreak = async (breakId) => {
  try {
    // –î–æ–±–∞–≤—å—Ç–µ –ª–æ–≥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    const breakRef = doc(db, "breaks", breakId);
    await deleteDoc(breakRef);
    toast.success;
  } catch (error) {
    // –î–æ–±–∞–≤—å—Ç–µ –ª–æ–≥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    toast.error;
    throw new Error(error.message);
  }
};
