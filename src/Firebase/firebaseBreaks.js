import {
  collection,
  deleteDoc,
  doc,
  getDocs,
  setDoc,
} from "firebase/firestore";
import { db } from "./firebaseConfig.js";
import { checkAdminPermissions } from "./firebaseHolidays.js";

// üî• –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–µ—Ä–µ—Ä—ã–≤–æ–≤
export const getBreaks = async () => {
  try {
    const querySnapshot = await getDocs(collection(db, "breaks"));
    return querySnapshot.docs.map((doc) => doc.data());
  } catch {
    return [];
  }
};

// üî• –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ—Ä—ã–≤–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
export const addBreak = async (breakTime) => {
  try {
    await checkAdminPermissions();
    const breakRef = doc(collection(db, "breaks"));
    await setDoc(breakRef, breakTime);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–µ—Ä–µ—Ä—ã–≤–∞:", error);
    throw error; // –î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ UI
  }
};

// üî• –£–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä–µ—Ä—ã–≤–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
export const deleteBreak = async (breakId) => {
  try {
    await checkAdminPermissions();
    const breakRef = doc(db, "breaks", breakId);
    await deleteDoc(breakRef);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–µ—Ä–µ—Ä—ã–≤–∞:", error);
    throw error;
  }
};
