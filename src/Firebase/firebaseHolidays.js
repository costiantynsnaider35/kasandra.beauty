import { db } from "./firebaseConfig.js";
import {
  collection,
  doc,
  getDocs,
  setDoc,
  deleteDoc,
  getDoc,
} from "firebase/firestore";
import { getAuth } from "firebase/auth";

// üî• –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
export const checkAdminPermissions = async () => {
  const auth = getAuth();
  const user = auth.currentUser;
  if (!user) throw new Error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω");

  const userRef = doc(db, "users", user.uid);
  const userSnap = await getDoc(userRef);

  if (!userSnap.exists() || userSnap.data().role !== "admin") {
    throw new Error("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏");
  }
};

// üî• –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–Ω–µ–π
export const getHolidays = async () => {
  try {
    const querySnapshot = await getDocs(collection(db, "holidays"));
    return querySnapshot.docs.map((doc) => doc.data().date);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–Ω–µ–π:", error);
    return [];
  }
};

// üî• –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—ã—Ö–æ–¥–Ω–æ–≥–æ –¥–Ω—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
export const addHoliday = async (date) => {
  try {
    await checkAdminPermissions();
    const holidayRef = doc(db, "holidays", date);
    await setDoc(holidayRef, { date });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤—ã—Ö–æ–¥–Ω–æ–≥–æ –¥–Ω—è:", error);
    throw error; // –î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ UI
  }
};

// üî• –£–¥–∞–ª–µ–Ω–∏–µ –≤—ã—Ö–æ–¥–Ω–æ–≥–æ –¥–Ω—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
export const deleteHoliday = async (date) => {
  try {
    await checkAdminPermissions();
    const holidayRef = doc(db, "holidays", date);
    await deleteDoc(holidayRef);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤—ã—Ö–æ–¥–Ω–æ–≥–æ –¥–Ω—è:", error);
    throw error;
  }
};
